#Public_key for Jump Server
public_key_file: "/root/.ssh/id_rsa.pub"

#ansible user creation for deployments
ansible_user_to_create: ansible_deployments
ansible_user_public_key_path: /home/ansible_deployments/.ssh/ansible_deployments_key.pub

ssh_service_name: "{{ 'sshd' if ansible_service_mgr == 'systemd' else 'ssh' }}"

fix_services_user: root

#******** NTP and Time Zone Settings ********* ^
# System timezone configuration
system_timezone: "Asia/Dubai"  # Change to your desired timezone (e.g., "America/New_York", "Europe/London", "Asia/Tokyo")

# NTP server configuration
primary_name_server: "10.10.10.10"  # Primary NTP server
secondary_name_server: "10.10.10.11"  # Secondary NTP server (optional)

# Cron service name per OS family
cron_service_name: "{{ 'crond' if ansible_os_family == 'RedHat' else 'cron' }}"


###############################################################################################################

# ================================
# USER MANAGEMENT CONFIGURATION
# ================================

user_management:
  ssh_config:
    check_allow_users: true
    sshd_config_path: "/etc/ssh/sshd_config"
    backup_sshd_config: true
    cleanup_old_backups: true
    backup_retention_days: 3
    max_backup_files: 5

# Global SSH Configuration
ssh_config:
  key_type: "rsa"
  key_size: 2048
  backup_configs: true
  validate_before_restart: true

# Backup Configuration (Remote Server)
backup_config:
  keep_count: 5
  backup_path: "/var/sshd_backups"

# Control Node Paths (Local/Ansible Controller)
control_node_paths:
  user_creds: "/tmp/users_creds"
  ssh_keys: "/tmp/users_creds/ssh_keys"

# Default User Settings
default_user_settings:
  shell: "/bin/bash"
  create_home: true
  password_expire: false
  ssh_access: true
  create_ssh_keys: true

# Team Definitions - Maps teams to inventory groups
team_inventory_mapping:
  vwdev-ldnet:
    inventory_groups: ["vwdev-ldnet", "dotnet_service", "web_servers"]
    description: ".NET Development Team"
    default_groups: ["users"]
    additional_groups: ["vwdev-ldnet", "all-users-denyediting", "all-users-allowtroubleshooting", "all-users-allowlogsaccess"]

  vwdev-lpyt:
    inventory_groups: ["vwdev-lpyt", "python_service", "api_servers"]
    description: "Python Development Team"
    default_groups: ["users"]
    additional_groups: ["vwdev-lpyt", "all-users-denyediting", "all-users-allowtroubleshooting", "all-users-allowlogsaccess"]

  vwdb-ldba:
    inventory_groups: ["vwdb-ldba", "database_servers", "mysql_servers", "postgresql_servers"]
    description: "Database Administration Team"
    default_groups: ["users"]
    additional_groups: ["vwdb-ldba", "all-users-denyediting", "all-users-allowtroubleshooting", "all-users-allowlogsaccess"]

  vwtac-ltac:
    inventory_groups: ["vwtac-ltac", "tactical_servers", "monitoring_servers"]
    description: "Tactical Operations Team"
    default_groups: ["users"]
    additional_groups: ["vwtac-ltac", "all-users-denyediting", "all-users-allowtroubleshooting", "all-users-allowlogsaccess"]

  vwops-lops:
    inventory_groups: ["vwops-lops"]  # applies to every host
    description: "Operations Team"
    default_groups: ["users"]
    additional_groups: ["sudo"]

  vwcore-lipt:
    inventory_groups: ["vwcore-lipt"]  # applies to every host
    description: "Core Team"
    default_groups: ["users"]
    additional_groups: ["sudo"]


# Team-Based User Definitions
team_users:

  # .NET Development Team (vwdev-ldnet)
  vwdev-ldnet:
    enabled: true
    team_description: ".NET Development Team"
    users:
      khizarhayyat.jafar:
        enabled: true
        full_name: "khizarhayyat.jafar"
        shell: "/bin/bash"
        create_home: true
        generate_password: true
        password: ""
        additional_groups: []
        primary_group: "AUTO"
        ssh_access: true
        create_ssh_keys: false
        password_expire: false
        comment: ".NET Developer"
        role: "Developer"

      umair.tasawar:
        enabled: true
        full_name: "umair.tasawar"
        shell: "/bin/bash"
        create_home: true
        generate_password: true
        password: ""
        additional_groups: []
        primary_group: "AUTO"
        ssh_access: true
        create_ssh_keys: false
        password_expire: false
        comment: ".NET Developer"
        role: "Developer"

      bilal.riaz:
        enabled: true
        full_name: "bilal.riaz"
        shell: "/bin/bash"
        create_home: true
        generate_password: true
        password: ""
        additional_groups: []
        primary_group: "AUTO"
        ssh_access: true
        create_ssh_keys: false
        password_expire: false
        comment: ".NET Developer"
        role: "Developer"

      husnain.khalid1:
        enabled: true
        full_name: "husnain.khalid1"
        shell: "/bin/bash"
        create_home: true
        generate_password: true
        password: ""
        additional_groups: []
        primary_group: "AUTO"
        ssh_access: true
        create_ssh_keys: false
        password_expire: false
        comment: ".NET Developer"
        role: "Developer"

      syed.haiderbukhari:
        enabled: true
        full_name: "syed.haiderbukhari"
        shell: "/bin/bash"
        create_home: true
        generate_password: true
        password: ""
        additional_groups: []
        primary_group: "AUTO"
        ssh_access: true
        create_ssh_keys: false
        password_expire: false
        comment: ".NET Developer"
        role: "Developer"

      taimoorkhan.kasi:
        enabled: true
        full_name: "taimoorkhan.kasi"
        shell: "/bin/bash"
        create_home: true
        generate_password: true
        password: ""
        additional_groups: []
        primary_group: "AUTO"
        ssh_access: true
        create_ssh_keys: false
        password_expire: false
        comment: ".NET Developer"
        role: "Developer"

#************ Python Team **************#

  # Python Development Team (vwdev-lpyt)
  vwdev-lpyt:
    enabled: true
    team_description: "Python Development Team"
    users:
      muhammadawais.zulifqar:
        enabled: true
        full_name: "muhammadawais.zulifqar"
        shell: "/bin/bash"
        create_home: true
        generate_password: true
        password: ""
        additional_groups: []
        primary_group: "AUTO"
        ssh_access: true
        create_ssh_keys: false
        password_expire: false
        comment: "Python Developer"
        role: "Lead Developer"

#************ DBA Team **************#

  # Database Administration Team (vwdb-ldba)
  vwdb-ldba:
    enabled: true
    team_description: "Database Administration Team"
    users:
      ijaz.tariq:
        enabled: true
        full_name: "Ijaz.Tariq"
        shell: "/bin/bash"
        create_home: true
        generate_password: true
        password: ""
        additional_groups: []
        primary_group: "AUTO"
        ssh_access: true
        create_ssh_keys: false
        password_expire: false
        comment: "Database Administrator"
        role: "Senior DBA"

      muhammad.iftikhar1:
        enabled: true
        full_name: "muhammad.iftikhar1"
        shell: "/bin/bash"
        create_home: true
        generate_password: true
        password: ""
        additional_groups: []
        primary_group: "AUTO"
        ssh_access: true
        create_ssh_keys: false
        password_expire: false
        comment: "Database Administrator"
        role: "Senior DBA"

      saqib.sadeeq:
        enabled: true
        full_name: "saqib.sadeeq"
        shell: "/bin/bash"
        create_home: true
        generate_password: true
        password: ""
        additional_groups: []
        primary_group: "AUTO"
        ssh_access: true
        create_ssh_keys: false
        password_expire: false
        comment: "Database Administrator"
        role: "Senior DBA"

  # Tactical Operations Team (vwtac-ltac)
  vwtac-ltac:
    enabled: false
    team_description: "Tactical Operations Team"
    users:
      ops.tactical:
        enabled: false
        full_name: "Tactical Operations"
        shell: "/bin/bash"
        create_home: true
        generate_password: true
        password: ""
        additional_groups: ["nagios", "zabbix"]
        primary_group: "AUTO"
        ssh_access: false
        create_ssh_keys: false
        password_expire: false
        comment: "Tactical Operations"
        role: "Operations Engineer"


  # Operations Team (vwops-lops)
  vwcore-lipt:
    enabled: true
    team_description: "Core Team - Full Access"
    users:
      talha.omair:
        enabled: true
        full_name: "talha.omair"
        shell: "/bin/bash"
        create_home: true
        generate_password: true
        password: ""
        additional_groups: []
        primary_group: "AUTO"
        ssh_access: true
        create_ssh_keys: true
        password_expire: false
        comment: "Telephony Engineer"
        role: "Senior Telephony Engineer"

      Abdullah.Sabri:
        enabled: true
        full_name: "talha.omair"
        shell: "/bin/bash"
        create_home: true
        generate_password: true
        password: ""
        additional_groups: []
        primary_group: "AUTO"
        ssh_access: true
        create_ssh_keys: true
        password_expire: false
        comment: "Telephony Engineer"
        role: "Senior Telephony Engineer"


  # Operations Team (vwops-lops)
  vwops-lops:
    enabled: true
    team_description: "Operations Team - Full Access"
    users:
      sysadmin.ops:
        enabled: true
        full_name: "System Administrator"
        shell: "/bin/bash"
        create_home: true
        generate_password: true
        password: ""
        additional_groups: []
        primary_group: "AUTO"
        ssh_access: true
        create_ssh_keys: true
        password_expire: false
        comment: "System Administrator"
        role: "Senior SysAdmin"

#************* Fail2ban jail.local  *******************#

fail2ban_ignore_ips: "{{ ['10.10.3.0/26', '127.0.0.1/8', '::1'] }}"


#************** DotNet Nginx Vars ******************#

#Apps_Services_Sites_Web_Variables
webserver_user: nginx
webserver_group: nginx

# SSL Configuration Options
ssl_certbot: true
ssl_public_ca: false
ssl_self_signed: false

# Global SSL settings
ssl_email: "vwso@ibex.co"

first_level_domains:
  parent_domain1: mpd.ae

###############################################################################################################

# Global variables for all hosts
deployment_base_dir: /var/www/engageapp
service_script_base_dir: /var/www/engageapp_services_script
systemd_service_dir: /etc/systemd/system
nginx_sites_available: /etc/nginx/sites-available
nginx_sites_enabled: /etc/nginx/sites-enabled

# .NET Applications configuration per host
dotnet_apps_hosts:
  "10.10.3.11":
    - service_host_name: mpp-identity
      service_host_url: mpp-identity.mpd.ae
      service_app_working_dir: "{{ deployment_base_dir }}/mpp-identity.mpd.ae/Api/Stable_Running"
      service_worker_working_dir: "{{ deployment_base_dir }}/mpp-identity.mpd.ae/Worker/Stable_Running"
      service_script_dir: "{{ service_script_base_dir }}/mpp-identity.mpd.ae"
      service_worker_required: false
      service_worker_dll: []
      service_app_api_required: true
      service_app_dll: Identity_WebApi.dll
      service_listen: 0.0.0.0
      service_port: 5001
      primary_backend_server: "10.10.3.16"
      secondary_backend_server: "10.10.3.22"
      # SSL options per service
      ssl_certbot: false
      ssl_public_ca: false
      ssl_self_signed: true

        #    - service_host_name: mpp-common
        #      service_host_url: mpp-common.mpd.ae
        #      service_app_working_dir: "{{ deployment_base_dir }}/mpp-common.mpd.ae/Api/Stable_Running"
        #      service_worker_working_dir: "{{ deployment_base_dir }}/mpp-common.mpd.ae/Worker/Stable_Running"
        #      service_script_dir: "{{ service_script_base_dir }}/mpp-common.mpd.ae"
        #      service_worker_required: false
        #      service_worker_dll: []
        #      service_app_api_required: true
        #      service_app_dll: Com_WebApi.dll
        #      service_listen: 0.0.0.0
        #      service_port: 5002
        #      primary_backend_server: "10.10.3.16"
        #      secondary_backend_server: "10.10.3.22"
        #      # SSL options per service
        #      ssl_certbot: false
        #      ssl_public_ca: false
        #      ssl_self_signed: true
        #
        #    - service_host_name: mpp-console
        #      service_host_url: mpp-console.mpd.ae
        #      service_app_working_dir: "{{ deployment_base_dir }}/mpp-console.mpd.ae/Api/Stable_Running"
        #      service_worker_working_dir: "{{ deployment_base_dir }}/mpp-console.mpd.ae/Worker/Stable_Running"
        #      service_script_dir: "{{ service_script_base_dir }}/mpp-console.mpd.ae"
        #      service_worker_required: false
        #      service_worker_dll: []
        #      service_app_api_required: true
        #      service_app_dll: Con_WebApi.dll
        #      service_listen: 0.0.0.0
        #      service_port: 5003
        #      primary_backend_server: "10.10.3.16"
        #      secondary_backend_server: "10.10.3.22"
        #      # SSL options per service
        #      ssl_certbot: false
        #      ssl_public_ca: false
        #      ssl_self_signed: true
        #
        #    - service_host_name: mpp-reporting
        #      service_host_url: mpp-reporting.mpd.ae
        #      service_app_working_dir: "{{ deployment_base_dir }}/mpp-reporting.mpd.ae/Api/Stable_Running"
        #      service_worker_working_dir: "{{ deployment_base_dir }}/mpp-reporting.mpd.ae/Worker/Stable_Running"
        #      service_script_dir: "{{ service_script_base_dir }}/mpp-reporting.mpd.ae"
        #      service_worker_required: false
        #      service_worker_dll: []
        #      service_app_api_required: true
        #      service_app_dll: Report_WebApi.dll
        #      service_listen: 0.0.0.0
        #      service_port: 5004
        #      primary_backend_server: "10.10.3.16"
        #      secondary_backend_server: "10.10.3.22"
        #      # SSL options per service
        #      ssl_certbot: false
        #      ssl_public_ca: false
        #      ssl_self_signed: true
        #
        #  "10.10.3.15":
        #    - service_host_name: mail-mpp-engage
        #      service_host_url: mail-mpp-engage.mpd.ae
        #      service_app_working_dir: "{{ deployment_base_dir }}/mail-mpp-engage.mpd.ae/Api/Stable_Running"
        #      service_worker_working_dir: "{{ deployment_base_dir }}/mail-mpp-engage.mpd.ae/Worker/Stable_Running"
        #      service_script_dir: "{{ service_script_base_dir }}/mail-mpp-engage.mpd.ae"
        #      service_worker_required: true
        #      service_worker_dll: Mail_Worker.dll
        #      service_app_api_required: true
        #      service_app_dll: Mail_WebApi.dll
        #      service_listen: 0.0.0.0
        #      service_port: 5001
        #      primary_backend_server: "10.10.3.15"
        #      secondary_backend_server: "10.10.3.20"
        #      # SSL options per service
        #      ssl_certbot: true
        #      ssl_public_ca: false
        #      ssl_self_signed: false
        #
        #    - service_host_name: wa-mpp-engage
        #      service_host_url: wa-mpp-engage.mpd.ae
        #      service_app_working_dir: "{{ deployment_base_dir }}/wa-mpp-engage.mpd.ae/Api/Stable_Running"
        #      service_worker_working_dir: "{{ deployment_base_dir }}/wa-mpp-engage.mpd.ae/Worker/Stable_Running"
        #      service_script_dir: "{{ service_script_base_dir }}/wa-mpp-engage.mpd.ae"
        #      service_worker_required: true
        #      service_worker_dll: wa_Worker.dll
        #      service_app_api_required: true
        #      service_app_dll: wa_WebApi.dll
        #      service_listen: 0.0.0.0
        #      service_port: 5002
        #      primary_backend_server: "10.10.3.15"
        #      secondary_backend_server: "10.10.3.20"
        #      # SSL options per service
        #      ssl_certbot: false
        #      ssl_public_ca: false
        #      ssl_self_signed: true

#****************** The one with Python and Nginx *****************#

# Python Applications configuration per host
python_services:
  "10.10.3.12":
    - service_hostname: vr-mpp-engage
      service_host_url: vr-mpp-engage.mpd.ae
      service_app_working_dir: "{{ deployment_base_dir }}/vr-mpp-engage.mpd.ae"
      service_script_dir: "{{ service_script_base_dir }}/vr-mpp-engage.mpd.ae"
      service_venv: "{{ deployment_base_dir }}/vr-mpp-engage.mpd.ae/venv_vr-mpp-engage"
      #local_service_hosting: uvicorn
      entry_point: app.main
      service_app: app
      service_listen_host: 0.0.0.0
      service_port: 8000
      primary_backend_server: "10.10.3.12"
      secondary_backend_server: "10.10.3.23"
      # SSL options per service
      ssl_certbot: false
      ssl_public_ca: false
      ssl_self_signed: true
      # Python specific settings
      workers: 4
      worker_class: uvicorn.workers.UvicornWorker
      timeout: 30
      keepalive: 5
      max_requests: 1000
      max_requests_jitter: 50

#  "10.10.3.17":
#    - service_hostname: ai-mpp-engage
#      service_host_url: ai-mpp-engage.mpd.ae
#      service_app_working_dir: "{{ deployment_base_dir }}/ai-mpp-engage.mpd.ae"
#      service_script_dir: "{{ service_script_base_dir }}/ai-mpp-engage.mpd.ae"
#      service_venv: "{{ deployment_base_dir }}/ai-mpp-engage.mpd.ae/venv_ai-mpp-engage"
#      local_service_hosting: gunicorn
#      entry_point: app.main
#      service_app: app
#      service_listen_host: 0.0.0.0
#      service_port: 8001
#      primary_backend_server: "10.10.3.17"
#      secondary_backend_server: "10.10.3.18"
#      # SSL options per service
#     ssl_certbot: true
#      ssl_public_ca: false
#      ssl_self_signed: false
#      # Python specific settings
#      workers: 6
#      worker_class: uvicorn.workers.UvicornWorker
#      timeout: 20
#      keepalive: 5
#      max_requests: 2000
#      max_requests_jitter: 100



# Database-related acl varibales directories and files
#Ownership fix
postgres_user: postgres
mysql_user: mysql

pg_db_directories:
  - /pgsql-logs/pg-logs
  - /pgsql-data/pg-data

mysql_db_directories:
  - /pgsql-logs/mysql-logs
  - /pgsql-data/mysql-data


db_service_user: root

#DB ACLs

db_group: vwdb-ldba
db_directories:
  - /pgsql-logs/
  - /pgsql-data/
  - /pgsql-backups/
  - /etc/postgress/
  - /etc/mysql/

db_files:
  - /etc/my.cnf
  - /etc/postgresql/16/main/pg_hba.conf
  - /etc/postgresql/16/main/postgresql.conf

# Developer-related directories
webserver_user: nginx

#DotNet - Acls

dev_group_dont_net: vwdev-ldnet
dev_directories:
  - /var/www/engageapp

#Acls
dev_group_pyt: vwdev-lpyt
dev_pyt_directories:
  - /var/www/engageapp/


#Dot_Net_Installatons
dont_required:
  - 8
  - 9

all_dotnet_versions:
  - "8.0"
  - "9.0"

dotnet_versions: "{{ all_dotnet_versions | difference(dont_required | map('string') | list) }}"


#************* nftables variables  *******************#

# group_vars/all.yml
# Engineers only need to modify this file to add/remove firewall rules

# Dynamic nftables service configuration
nft_services:

  # SSH Access
  ssh_all_internal_communication:
    enabled: true
    set_name: "ssh_all_internal_communication"
    set_file: "ssh_all_internal_communication"
    ports: [22]
    protocol: "tcp"
    description: "SSH access from internal networks"
    log_prefix: "ALLOW SSH"
    drop_others: true
    drop_log_prefix: "DROP SSH others"
    source_ips:

      Internal Subnet:
        - "10.0.0.0/8"

  # Trusted Internal Traffic (Allow All)
  trusted_all_internal_communication:
    enabled: true
    set_name: "trusted_all_internal_communication"
    set_file: "trusted_all_internal_communication"
    ports: []  # Empty means allow ALL traffic
    protocol: "all"
    description: "Allow all traffic from trusted internal subnets"
    log_prefix: "ALLOW Trusted Subnet"
    drop_others: false
    source_ips:
      management_production:
        - "10.10.3.0/26"

  # Database Clients
  db_all_internal_communication:
    enabled: true
    set_name: "db_all_internal_communication"
    set_file: "db_all_internal_communication"
    ports: [3306, 3307, 5433, 5432]
    protocol: "tcp"
    description: "Database access for MySQL and PostgreSQL"
    log_prefix: "ALLOW DB Clients"
    drop_others: false
    source_ips:
      application_servers:
        - "10.10.3.0/26"

  # Database Clients
  redis_communication:
    enabled: true
    set_name: "db_all_internal_communication"
    set_file: "db_all_internal_communication"
    ports: [10718]
    protocol: "tcp"
    description: "Database access for MySQL and PostgreSQL"
    log_prefix: "ALLOW DB Clients"
    drop_others: false
    source_ips:
      application_servers:
        - "54.254.15.16/32"
        - "54.169.89.160/32"

  # DNS Servers (Full Access)
  dns_all_internal_communication:
    enabled: true
    set_name: "dns_all_internal_communication"
    set_file: "dns_all_internal_communication"
    ports: []  # Empty means allow ALL traffic
    protocol: "all"
    description: "DNS servers allowed all inbound traffic"
    log_prefix: "ALLOW DNS"
    drop_others: false
    source_ips:
      dns_servers:
        - "10.10.10.10/32"

  # Management Access (API & Monitoring)
  mgmt_all_internal_communication:
    enabled: true
    set_name: "mgmt_all_internal_communication"
    set_file: "mgmt_all_internal_communication"
    ports: [443, "9000-9010"]
    protocol: "tcp"
    description: "Management VLAN for API and monitoring"
    log_prefix: "ALLOW API/Monitoring"
    drop_others: false
    source_ips:
      management_vlan:
        - "10.10.3.0/26"


  # Nagios Monitoring
  nagios_all_internal_communication:
    enabled: true
    set_name: "nagios_all_internal_communication"
    set_file: "nagios_all_internal_communication"
    ports: [9999, "9100-9200", 8080, 9180, 9273, 22, 80, 443, 9090, 9093, 3000, 3100]
    protocol: "tcp"
    description: "Nagios monitoring access"
    log_prefix: "ALLOW Port 9999"
    drop_others: false
    source_ips:
      nagios_server:
        - "10.10.3.0/26"

  # Telnet Access
  telnet_all_internal_communication:
    enabled: true
    set_name: "telnet_all_internal_communication"
    set_file: "telnet_all_internal_communication"
    ports: [23]
    protocol: "tcp"
    description: "Telnet access from all networks"
    log_prefix: "ALLOW Telnet"
    drop_others: false
    source_ips:
      all_networks:
        - "0.0.0.0/0"

# Port sets for global access (no IP restrictions)
nft_port_sets:

  # Voice WebSocket Ports (TCP)
  voice_websocket_all_internal_communication:
    enabled: true
    set_name: "voice_websocket_all_internal_communication"
    set_file: "voice_websocket_all_internal_communication"
    type: "inet_service"
    protocol: "tcp"
    description: "TCP services open to all"
    log_prefix: "ALLOW Open TCP (global)"
    ports:
      - 80
      - 443
      - 8089
      - 3478
      - 5060
      - 5061

  # Voice UDP Ports
  voice_udp_all_internal_communication:
    enabled: true
    set_name: "voice_udp_all_internal_communication"
    set_file: "voice_udp_all_internal_communication"
    type: "inet_service"
    protocol: "udp"
    description: "UDP services open to all"
    log_prefix: "ALLOW Open UDP (global)"
    ports:
      - 3478
      - 5060
      - 5061
      - "10000-65535"

