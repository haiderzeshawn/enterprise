================================================================================
TEAM USER CREDENTIALS - {{ user_key }}
================================================================================

Team: {{ team_name }} ({{ team_config.team_description }})
Server: {{ inventory_hostname }}
Generated: {{ ansible_date_time.iso8601 }}
Created by: {{ ansible_user_id }}@{{ ansible_hostname }}

USER DETAILS:
-------------
Username: {{ user_key }}
Full Name: {{ user_config.full_name | default('Not specified') }}
Password: {{ user_password }}
Role: {{ user_config.role | default('Team Member') }}
Shell: {{ user_config.shell | default('/bin/bash') }}
Home Directory: {{ '/home/' + user_key if user_config.create_home | default(true) else 'No home directory' }}
Comment: {{ user_config.comment | default('Team User') }}

TEAM INFORMATION:
-----------------
Team: {{ team_name }}
Team Description: {{ team_config.team_description }}
Target Servers: {{ team_inventory_mapping[team_name].inventory_groups | join(', ') }}

GROUP MEMBERSHIP:
-----------------
Primary Group: {{ user_config.primary_group | default('users') }}
Team Default Groups: {{ team_inventory_mapping[team_name].default_groups | join(', ') }}
Additional Groups: {{ user_config.additional_groups | default(['none']) | join(', ') }}
Final Groups: {{ (team_inventory_mapping[team_name].default_groups + user_config.additional_groups | default([])) | join(', ') }}

ACCESS PERMISSIONS:
-------------------
SSH Access: {{ 'Enabled' if user_config.ssh_access | default(false) else 'Disabled' }}
SSH Keys: {{ 'Generated' if user_config.create_ssh_keys | default(false) else 'Not generated' }}
Password Expires: {{ 'Yes' if user_config.password_expire | default(false) else 'No' }}
Account Status: {{ 'Enabled' if user_config.enabled | default(false) else 'Disabled' }}

{% if user_config.ssh_access | default(false) and user_config.create_ssh_keys | default(false) %}
SSH KEY INFORMATION:
--------------------
Private Key (PEM): {{ ssh_key_pem_path }}
Private Key (PPK): {{ ssh_key_ppk_path }}
Public Key: {{ ssh_key_pub_path }}
Key Type: RSA 2048-bit
Key Comment: {{ user_key }}@{{ team_name }}-{{ inventory_hostname }}

SSH CONNECTION METHODS:
-----------------------
# Method 1: Using PEM key (Linux/Mac/WSL):
ssh -i {{ ssh_key_pem_path }} {{ user_key }}@{{ inventory_hostname }}

# Method 2: Using password:
ssh {{ user_key }}@{{ inventory_hostname }}

# Method 3: PuTTY (Windows) - Use PPK file:
# Host: {{ inventory_hostname }}
# Username: {{ user_key }}
# Private Key: {{ ssh_key_ppk_path }}

KEY DISTRIBUTION:
-----------------
1. For Linux/Mac users:
   - Copy: {{ ssh_key_pem_path }}
   - Set permissions: chmod 600 ~/.ssh/{{ user_key }}_{{ inventory_hostname }}.pem
   - Connect: ssh -i ~/.ssh/{{ user_key }}_{{ inventory_hostname }}.pem {{ user_key }}@{{ inventory_hostname }}

2. For Windows PuTTY users:
   - Use: {{ ssh_key_ppk_path }}
   - Load in PuTTY under Connection > SSH > Auth > Private key file

3. For SSH config setup:
   Add to ~/.ssh/config:
   Host {{ team_name }}-{{ inventory_hostname }}
       HostName {{ inventory_hostname }}
       User {{ user_key }}
       IdentityFile {{ ssh_key_pem_path }}
       StrictHostKeyChecking no

{% elif user_config.ssh_access | default(false) %}
SSH ACCESS (Password Only):
---------------------------
SSH Keys: Not generated (create_ssh_keys: false)
Connection: ssh {{ user_key }}@{{ inventory_hostname }}
Use the password provided above for authentication.

{% else %}
SSH ACCESS:
-----------
SSH Access: Disabled
This user cannot connect via SSH.
{% endif %}

{% if user_config.generate_password | default(false) %}
SECURITY NOTES:
---------------
- Password was automatically generated for team {{ team_name }}
- User should change password on first login
{% if user_config.create_ssh_keys | default(false) %}
- SSH key authentication is configured and recommended over password
- Consider disabling password authentication once keys are distributed
{% endif %}
{% endif %}

TEAM SERVER ACCESS:
-------------------
This user can access servers in these inventory groups:
{{ team_inventory_mapping[team_name].inventory_groups | join(', ') }}

{% if user_config.create_ssh_keys | default(false) %}
PRIVATE KEY SECURITY:
---------------------
üîê IMPORTANT SECURITY GUIDELINES:
- Private keys are stored on control node
- Distribute private keys through secure channels only
- Never share private keys via email or insecure messaging
- Set proper file permissions (600) on private keys
- Consider using SSH agent for convenience
- Rotate keys periodically for enhanced security

FILE LOCATIONS ON CONTROL NODE:
- PEM Format: {{ ssh_key_pem_path }}
- PPK Format: {{ ssh_key_ppk_path }}
- Public Key: {{ ssh_key_pub_path }}

QUICK SECURITY CHECK:
# Verify key permissions on control node:
ls -la {{ ssh_key_pem_path }}
ls -la {{ ssh_key_ppk_path }}

# Test connection:
ssh -i {{ ssh_key_pem_path }} -o ConnectTimeout=5 {{ user_key }}@{{ inventory_hostname }}
{% endif %}

TROUBLESHOOTING:
----------------
{% if user_config.create_ssh_keys | default(false) %}
# If SSH key connection fails:
1. Check key permissions: chmod 600 {{ ssh_key_pem_path }}
2. Verify SSH service: systemctl status sshd
3. Check SSH logs: tail -f /var/log/auth.log
4. Test with verbose: ssh -v -i {{ ssh_key_pem_path }} {{ user_key }}@{{ inventory_hostname }}

{% endif %}
# If password login fails:
1. Verify user account: id {{ user_key }}
2. Check AllowUsers in /etc/ssh/sshd_config
3. Verify password hasn't expired
4. Check SSH service configuration

# General troubleshooting:
- Ensure user is in SSH AllowUsers list
- Verify network connectivity to {{ inventory_hostname }}
- Check firewall rules on target server

================================================================================
IMPORTANT: 
- Store this information securely and delete when no longer needed
- Team Lead: Distribute credentials and SSH keys securely to team members
- Follow your organization's security policies for key management
================================================================================

