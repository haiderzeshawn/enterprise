# Self-signed SSL configuration
server {
    listen 443 ssl;
    http2 on;
    server_name {{ item.service_host_url }};

    # Self-signed SSL certificates - Wildcard format using parent domain
    ssl_certificate /etc/pki/tls/certs/star.{{ first_level_domains.parent_domain1 }}.pem;
    ssl_certificate_key /etc/pki/tls/private/star.{{ first_level_domains.parent_domain1 }}.key;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Logging
    access_log /var/log/nginx/{{ item.service_host_url }}.main.log main_logs;
    access_log /var/log/nginx/{{ item.service_host_url }}.proxy.log proxy_logs;
    error_log /var/log/nginx/{{ item.service_host_url }}.error.log warn;

    # Proxy to application using upstream
    location / {
        proxy_pass http://{{ item.service_host_name }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name {{ item.service_host_url }};
    return 301 https://$host$request_uri;
}

